stages:
  - build
  - deploy

variables:
  TAG_LATEST: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:latest
  TAG_COMMIT: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$CI_COMMIT_SHORT_SHA

build:
  image: docker:latest
  stage: build
  services:
    - docker:dind
  script:
    - echo "Building image..."
    - docker build -t $TAG_COMMIT -t $TAG_LATEST .
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - echo "Pushing image..."
    - docker push $TAG_COMMIT
    - docker push $TAG_LATEST
  except: 
    - /^feature\//

deploy_production:
  image: alpine:latest
  stage: deploy
  tags:
    - gitlab-org-docker
  script:
    - echo $API_PRODUCTION_ID_RSA
    - chmod og= $API_PRODUCTION_ID_RSA
    - apk update && apk add openssh-client
    - ssh -i $API_PRODUCTION_ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$API_PRODUCTION_URL "docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY"
    - ssh -i $API_PRODUCTION_ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$API_PRODUCTION_URL "docker pull $TAG_COMMIT"
    - sed -i "s|IMAGE_TAG|$TAG_COMMIT|g" docker-compose.yml
    - scp -i $API_PRODUCTION_ID_RSA -o StrictHostKeyChecking=no ./docker-compose.yml $SERVER_USER@$API_PRODUCTION_URL:/home/deployer/backend
    - ssh -i $API_PRODUCTION_ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$API_PRODUCTION_URL "cd /home/deployer/backend && docker-compose up -d --force-recreate"
  environment:
    name: production
    url: https://apiwpp.acesso.srv.br
  only:
    - main